{"version":3,"sources":["SimplePopover.js","MediaCard.js","ImageList.js","BookmarksList.js","Tab.js","ButtonAppBar.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","typography","padding","spacing","width","SimplePopover","props","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","id","undefined","Button","variant","color","onClick","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","className","data","root","maxWidth","media","height","MediaCard","Card","CardActionArea","CardMedia","image","url_s","title","CardContent","component","CardActions","bookmarked","size","removeBookmark","bookmarkItem","tags","backgroundColor","palette","background","paper","item","avatar","marginRight","paginator","display","justifyContent","ImageList","setData","phrase","query","setQuery","search","page","setSearch","isLoading","setIsLoading","bookmarks","setBookmark","isError","setIsError","totalPages","setTotalPages","useEffect","flickr","Flickr","a","photos","text","per_page","sort","extras","result","images","body","photo","map","pages","fetchData","onSubmit","preventDefault","TextField","style","margin","placeholder","fullWidth","value","onChange","target","InputLabelProps","shrink","Box","Pagination","count","defaultPage","showFirstButton","showLastButton","ul","bookData","store","set","remove","newBookmarks","filter","el","BookmarksList","localData","each","key","error","console","log","TabPanel","children","index","other","role","hidden","p","a11yProps","flexGrow","tabs","borderRight","divider","overflow","VerticalTabs","setValue","Tabs","orientation","newValue","Tab","label","menuButton","ButtonAppBar","AppBar","position","Toolbar","IconButton","edge","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ec6b180.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n    width: \"400px\",\r\n  },\r\n}));\r\n\r\nexport default function SimplePopover(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Button aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick}>\r\n        Show Tags\r\n      </Button>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Typography className={classes.typography}>{props.data}</Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SimplePopover from './SimplePopover';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 200,\r\n    },\r\n});\r\n\r\nexport default function MediaCard(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={props.data.url_s}\r\n                    title={props.data.title}\r\n                />\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {props.data.title}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                {props.data.bookmarked ?\r\n                    (<Button size=\"small\"\r\n                        color=\"primary\"\r\n                        onClick={() => props.removeBookmark(props.data)}>\r\n                        Remove Bookmark\r\n                    </Button>) : (<Button size=\"small\"\r\n                        color=\"primary\"\r\n                        onClick={() => props.bookmarkItem(props.data)}>\r\n                        Bookmark It!\r\n                    </Button>)}\r\n                <SimplePopover data={props.data.tags}></SimplePopover>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport Flickr from 'flickr-sdk';\r\nimport store from 'store';\r\nimport MediaCard from './MediaCard';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {  makeStyles, Box } from \"@material-ui/core\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  item: {\r\n    padding: theme.spacing(1.2)\r\n  },\r\n  avatar: { marginRight: theme.spacing(5) },\r\n  paginator: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    padding: \"10px\"\r\n  }\r\n}));\r\n\r\nexport default function ImageList(props) {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(props.phrase);\r\n  const [search, setSearch] = useState({\r\n    search: '',\r\n    page: 1\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [bookmarks, setBookmark] = useState([]);\r\n  const [isError, setIsError] = useState(false);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  useEffect(() => {\r\n    var flickr = new Flickr('1d46b87ab0b528fc412e9d4b426bd4f5');\r\n    const fetchData = async () => {\r\n      setIsError(false);\r\n      setIsLoading(true);\r\n      try {\r\n        const result = await flickr.photos.search({\r\n          text: query,\r\n          per_page: 30,\r\n          page: search.page,\r\n          sort: 'relevance',\r\n          extras: 'url_s, tags, description'\r\n        });\r\n        let images = result.body.photos.photo.map(item => {\r\n          item.bookmarked = false;\r\n          return item\r\n        });\r\n        setTotalPages(result.body.photos.pages);\r\n        setData(images);\r\n      } catch (error) {\r\n        setIsError(true);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [search]);\r\n\r\n  const handlePageChange = (event, value) => {\r\n    setSearch({\r\n      search: search.search,\r\n      page: value\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={event => {\r\n        props.setQuery(query);\r\n        setSearch({\r\n          search: query,\r\n          page: search.page\r\n        });\r\n        event.preventDefault()\r\n      }}>\r\n        <TextField\r\n          id=\"standard-full-width\"\r\n          style={{ margin: 8 }}\r\n          placeholder=\"Type smth and press enter\"\r\n          fullWidth\r\n          value={query}\r\n          margin=\"normal\"\r\n          onChange={event => {\r\n            setQuery(event.target.value)\r\n          }}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      </form>\r\n         <Box component=\"span\">\r\n           <Pagination\r\n             count={totalPages}\r\n             page={search.page}\r\n             onChange={handlePageChange}\r\n             defaultPage={1}\r\n             color=\"primary\"\r\n             size=\"large\"\r\n             showFirstButton\r\n             showLastButton\r\n             classes={{ ul: classes.paginator }}\r\n           />\r\n         </Box>\r\n\r\n      {isError && <div>Something went wrong...</div>}\r\n\r\n      {isLoading ? (<div>Loading...</div>) : (\r\n\r\n        <ul className='list-container'>\r\n          {data.map(item => {\r\n            return (\r\n              <li className='list-item' key={item.id}>\r\n                <MediaCard data={item}\r\n                  bookmarkItem={bookData => {\r\n                    item.bookmarked = true;\r\n                    setBookmark([...bookmarks, item]);\r\n                    store.set(bookData.id, bookData);\r\n                  }}\r\n                  removeBookmark={bookData => {\r\n                    store.remove(bookData.id);\r\n                    item.bookmarked = false;\r\n                    let newBookmarks = bookmarks.filter(function (el) {\r\n                      return el.id !== bookData.id\r\n                    })\r\n                    setBookmark(newBookmarks);\r\n                  }}\r\n                ></MediaCard>\r\n              </li>)\r\n          })}\r\n        </ul>\r\n         \r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport store from 'store';\r\nimport MediaCard from './MediaCard';\r\n\r\nexport default function BookmarksList() {\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            setIsError(false);\r\n            setIsLoading(true);\r\n            try {\r\n                let localData = [];\r\n                store.each(function (value, key) {\r\n                    localData = [...localData, value];\r\n                })\r\n                setData(localData);\r\n            } catch (error) {\r\n                setIsError(true);\r\n            }\r\n            setIsLoading(false);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            <ul className='list-container'>\r\n                {data.map(item => {\r\n                    return (\r\n                        <li className='list-item' key={item.id}>\r\n                            <MediaCard data={item}\r\n                                bookmarkItem={bookData => {\r\n                                    console.log('yay');\r\n                                }}\r\n                                removeBookmark={bookData => {\r\n                                    store.remove(bookData.id);\r\n                                    item.bookmarked = false;\r\n                                    let newBookmarks = data.filter(function (el) {\r\n                                        return el.id !== bookData.id\r\n                                    })\r\n                                    setData(newBookmarks);\r\n                                }}></MediaCard>\r\n                        </li>)\r\n                })}\r\n            </ul>\r\n        </Fragment>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ImageList from './ImageList';\r\nimport BookmarksList from './BookmarksList';\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    height: 96,\r\n    \r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n    overflow: 'visible',\r\n  },\r\n}));\r\n\r\nexport default function VerticalTabs() {\r\n  const classes = useStyles();\r\n  const [search, setSearch] = useState('cats');\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        \r\n      <Tabs\r\n        orientation=\"vertical\"\r\n        variant=\"scrollable\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Vertical tabs example\"\r\n        className={classes.tabs}\r\n      >\r\n        <Tab label=\"Search\" {...a11yProps(0)} />\r\n        <Tab label=\"Bookmarks\" {...a11yProps(1)} />\r\n        \r\n      </Tabs>\r\n      <TabPanel value={value} index={0}>\r\n        <ImageList phrase={search} setQuery={query => setSearch(query)}></ImageList>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <BookmarksList></BookmarksList>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Flickr finder\r\n          </Typography>\r\n          <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              \r\n              aria-haspopup=\"true\"\r\n              \r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { Fragment, useState, useEffect } from 'react';\nimport './App.css';\nimport VerticalTabs from './Tab';\nimport ButtonAppBar from './ButtonAppBar';\n\nfunction App() {\n  \n  return (\n    <Fragment>\n      <ButtonAppBar></ButtonAppBar>\n      <VerticalTabs></VerticalTabs>\n    </Fragment>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}